name: AWS EC2 CI/CD FE

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build-push-docker:
    name: Build docker image then push to docker hub
    runs-on: ubuntu-latest
    # needs: Unit-Test
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        run: docker build -t hencya/fe-clinovation:latest .
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push image to Docker Hub
        run: docker push hencya/fe-clinovation:latest

  deployment-ec2-aws:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: SSH Config
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/clinovation.pem
          chmod 400 ~/.ssh/clinovation.pem
          cat >>~/.ssh/config <<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/clinovation.pem
            StrictHostKeyChecking=no
          END
      - name: Connect to EC2 instance & run Docker image from registry
        # env:
        #   PORT: ${{ secrets.PORT }}
        #   CONTEXT_TIMEOUT: ${{ secrets.CONTEXT_TIMEOUT }}
        #   DB_USER: ${{ secrets.DB_USER }}
        #   DB_PASS: ${{ secrets.DB_PASS }}
        #   DB_HOST: ${{ secrets.DB_HOST }}
        #   DB_PORT: ${{ secrets.DB_PORT }}
        #   DB_NAME: ${{ secrets.DB_NAME }}
        #   JWT_SECRET: ${{ secrets.JWT_SECRET }}
        #   JWT_EXPIRE: ${{ secrets.JWT_EXPIRE }}
        run: |
          ssh development '
          docker rm -vf $(docker ps -a -q) || true && \
          docker pull hencya/fe-clinovation:latest && \
          docker run -d -p 3000:3000 --name fe-clinovation \
          docker pull hencya/clinovation-api:latest && \
          docker run -d -p 8080:8080 --name clinovation-api \
          hencya/fe-clinovation:latest'
